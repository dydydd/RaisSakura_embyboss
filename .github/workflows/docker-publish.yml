name: Docker Build and Push

on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 1.2.1)'
        required: false
        default: ''

env:
  DOCKER_IMAGE: dydydd/raisbot
  BASE_VERSION: 1.2.1

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels)
        id: meta
        run: |
          # 确定版本号
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] && [ -n "${{ github.event.inputs.version }}" ]; then
            VERSION="${{ github.event.inputs.version }}"
          elif [[ $GITHUB_REF == refs/tags/v* ]]; then
            VERSION=${GITHUB_REF#refs/tags/v}
          else
            VERSION="${BASE_VERSION}"
          fi
          
          # 构建标签
          TAGS="${DOCKER_IMAGE}:${VERSION}"
          TAGS="${TAGS},${DOCKER_IMAGE}:latest"
          
          # 如果是主分支，添加日期标签
          if [[ $GITHUB_REF == refs/heads/main ]] || [[ $GITHUB_REF == refs/heads/master ]]; then
            DATE_TAG=$(date +%Y%m%d)
            TAGS="${TAGS},${DOCKER_IMAGE}:${DATE_TAG}"
          fi
          
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "build_date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: |
            org.opencontainers.image.title=RaisBot
            org.opencontainers.image.description=Emby & Jellyfin管理机器人
            org.opencontainers.image.version=${{ steps.meta.outputs.version }}
            org.opencontainers.image.created=${{ steps.meta.outputs.build_date }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Display image information
        if: github.event_name != 'pull_request'
        run: |
          echo "✅ Docker镜像构建成功！"
          echo ""
          echo "📦 镜像信息:"
          echo "  - 仓库: ${{ env.DOCKER_IMAGE }}"
          echo "  - 版本: ${{ steps.meta.outputs.version }}"
          echo "  - 标签: ${{ steps.meta.outputs.tags }}"
          echo ""
          echo "🚀 使用方法:"
          echo "  docker pull ${{ env.DOCKER_IMAGE }}:${{ steps.meta.outputs.version }}"
          echo "  docker pull ${{ env.DOCKER_IMAGE }}:latest"